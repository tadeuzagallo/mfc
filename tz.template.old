	template: (content, params, context)->
		content += ''
		template = "var #{@attr 'internal'} = [];";
		_start = template.length
		c = @mod('coffee-script').compile
		r = /<%(=)?(#)?/g
		holder = no
		
		
		fn = (match, print,comment, index, all)=>
			unless template.length > _start
				template += "#{@attr 'internal'}.push('#{all.substr(0, index)}');"
			
			_code = all.substr index
			code = _code.substr  (if print then 3 else 2)
			code = do (code).substr(0, code.indexOf '%>').replace(/\\'/g, '\"').trim

			if print
				code = c(code).trim()
				code = code.substr(0, code.length - 1) if code.charAt(code.length-1) is ';'
				template += "#{@attr 'internal'}.push(#{code});"
			else
				if code is 'end'
					if holder then code = fn else code = '}'
					holder = no
				else if code.charAt(code.length-1) is ':'
					_fn = (match, code, index, all) ->
						holder = code
						''
					try
						code = c(code.substr(0, code.length-1) + "\n\t#{@attr 'internal'}\n\t#{@attr 'internal'}").replace(new RegExp("#{@attr 'internal'};\\s*#{@attr 'internal'};([\\s\\S.]*)"), _fn)
					catch err
						code = "}#{code.substr(0, code.length-1)}{"
				else 
					code = c(code).replace(/\(function\(\)\s*{([\s\S]*)}\s*\).call\(this\)\s*;/, '$1')
				
				
				if comment then template += " <!--#{code}-->" else template += " #{code} "

			offset = if _code.substr(2).indexOf('<%') isnt -1 then index + _code.substr(2).indexOf('<%') + 2 else all.length
			start = index+_code.indexOf('%>') + 2 
			template += "#{@attr 'internal'}.push('#{all.substr(start, offset-start)}');"